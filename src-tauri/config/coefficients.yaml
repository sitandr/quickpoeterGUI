# Под слогом везде подразумевается группа подряд идущих согласных, номер слога (обычно с конца) — количество гласных, встретившихся до этой группы
# asympt — пропорциональность параметра длине слова — чтобы не "поощрять" длинные слова, следует
# каждую характеристику разделить на (минимальную длину)^asympt; в силу специфики алгоритмов asympt будут разными
# weight — общий "вес" параметра (множитель)

misc:
  same_cons_end: 0.5 # +, если оба имеют/не имеют согласных на концах
  length_diff_fine: 0.10 # −(длина₁/длина₂ - 1)·length_diff_fine; длина₁ ≥ длины₂
  # стараемся подбирать слова той же длины

unsymmetrical: # то, что нужно для поиска подходящих слов, а не для расстояния "в целом"
  # на искомые слова налагается штраф в
  #  less_w * Δдлины ^ less_pow, если меньше оптимальной длины
  #  more_w * Δдлины ^ more_pow, если больше оптимальной
  optimal_length: 3.5
  less_w: 0.4
  less_pow: 2.0
  more_w: 0.2
  more_pow: 1.1

stresses:
  # для каждой соотв. пары гласных assonanse_distance = Σ Δassonance_vectors² (см. convertation.yaml)
  k_not_strict_stress:  2.0 # − k · assonanse_distance, если нестрогое ударение с отсутствием ударения
  k_strict_stress:      20.0 # -//-, если оба ударения есть
  bad_rythm:            50 # чистый штраф, если не совпадают по ритму (строгий ударный со строгим безударным)
  # no stress -> 1.0

  # множитель на сравние двух соотв. гласных: · (номер гласной (с конца) + shift_syll_ending)^pow_syll_ending
  shift_syll_ending:     1.0
  pow_syll_ending:       1.0

  asympt:               1.0
  asympt_shift:         2.0
  weight:               13.0

consonant_structure:
  # для каждого слога −(длина_слога₁ − длина_слога₂)^pow
  pow:    2.0
  # множитель на сравние двух соотв. гласных: · (номер группы согласных (с конца) + shift_syll_ending)^pow_syll_ending
  shift_syll_ending:     1.0
  pow_syll_ending: 1.0

  asympt: 1.0
  asympt_shift:         2.0
  weight: 1.0


alliteration:
  # для каждых двух согласных вычисляется
  # (номера слога и букв — с конца) 
  # d1 = номер_слога₁ + номер_буквы₁ / (длина_слога₁ + длина_слога₂)
  # d2 = номер_слога₂ + номер_буквы₂ / (длина_слога₁ + длина_слога₂)
  # k = (|d₁ - d₂| + shift_coord)^pow_coord_delta · (d₁ + d₂ + shift_syll_ending)^pow_syll_ending 
  #                ↑                                         ↑
  #   отвечает за расстояние между буквами    отвечает за важность совпадения более близких к концу согласных
  #
  # и суммируется близость_согласных/k 

  shift_coord:           1.0
  shift_syll_ending:     1.0
  pow_coord_delta:       3.0
  pow_syll_ending:       1.0

  weight:                5.0
  asympt:                0.3
  asympt_shift:          2.0

meaning:
  weight: 4.0

popularity:
  pow: 1.2
  weight: 3e-6 # в словаре на текущий момент 30 000 слов (не считая их форм, вместе с формами ~ 700 000)